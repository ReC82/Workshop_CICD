  
##############################
#   install Postgre
##############################
- name: Install wget and ca-certificates
  apt:
    name: 
      - wget
      - ca-certificates
    state: present

- name: Add PostgreSQL APT Repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main"
    state: present
    filename: pgdg.list    

- name: Download the PostgreSQL GPG key
  get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /tmp/pgdg.asc
    mode: '0644'

- name: Move the key to apt's trusted key directory
  copy:
    src: /tmp/pgdg.asc
    dest: /etc/apt/trusted.gpg.d/pgdg.asc
    owner: root
    group: root
    mode: '0644'
    remote_src: true

- name: Install Postgre
  apt:
    name:
      - postgresql
      - postgresql-contrib
    state: present
  become: true
  
- name: Enable PostgreSQL
  systemd:
    name: postgresql  
    enabled: true

- name: Set password for the postgres system user (Debian/Ubuntu alternative)
  shell: echo "postgres:postgres" | chpasswd

- name: Create PostgreSQL user 'sonar'
  become_user: postgres
  postgresql_user:
    name: sonar
    password: sonar
    encrypted: yes

- name: Create 'sonarqube' database with owner 'sonar'
  become_user: postgres
  postgresql_db:
    name: sonarqube
    owner: sonar

- name: Grant all privileges on 'sonarqube' database to 'sonar'
  become_user: postgres
  postgresql_query:
    db: sonarqube
    query: "GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonar"

# Prepare Backup

- name: Ensure the .pgpass file exists
  file:
    path: "{{ ansible_env.HOME }}/.pgpass"
    state: touch
    mode: '0600'

- name: Write PostgreSQL connection information to .pgpass
  lineinfile:
    path: "{{ ansible_env.HOME }}/.pgpass"
    line: "{{ item }}"
    create: yes
    state: present
  with_items:
    - "localhost:5432:sonarqube:sonar:sonar"