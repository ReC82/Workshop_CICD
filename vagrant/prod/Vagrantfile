require 'csv'

servers = []

env = "prod" # !!! CONTROLLER

CSV.foreach("servers.csv", headers: true) do |row|
  if true # row["env"] == env
    servers << {
      :server_hostname => row["server_hostname"],
      :server_ip => row["server_ip"],
      :env => row["env"],
      :server_function => row["server_function"],
      :server_box => row["server_box"],
      :ssh_port => row["ssh_port"],
      :http_port => row["http_port"]
    }
  end
end

Vagrant.configure("2") do |config|
  servers.each do |server|
    config.vm.define server[:server_hostname] do |srv|

      # COMMON CONFIGURATIONS
      srv.vm.box = server[:server_box]
      srv.vm.hostname = server[:server_hostname]
      srv.vm.network "private_network", ip: server[:server_ip]
      srv.vm.network "forwarded_port", guest: 22, host: server[:ssh_port], id: "ssh"
      config.vm.synced_folder "./shared_folder", "/home/vagrant/shared"

      # PROVISION COMMON
      srv.vm.provision "shell", run: "always", path: "scripts/setup_common.sh"
      # PROVISION SPECIFIC
      if server[:server_function] == "NODE"
        # CONFIGURE PORT FOR WEBSERVER
        if server[:server_hostname].include?("web")
          srv.vm.network "forwarded_port", guest: 80, host: server[:http_port], id: "http"
          srv.vm.provider :virtualbox do |vbox|
            vbox.customize ["modifyvm", :id, "--memory", 1024]
            vbox.customize ["modifyvm", :id, "--cpus", 1]
          end
        else
          # CONFIGURE MEMORY AND CPU FOR NODES != WEB
          srv.vm.provider :virtualbox do |vbox|
            vbox.customize ["modifyvm", :id, "--memory", 512]
            vbox.customize ["modifyvm", :id, "--cpus", 1]
          end
        end
        # EXECUTE NODE SCRIPT
        srv.vm.provision "shell", run: "always", path: "scripts/setup_nodes.sh"
      elsif server[:server_function] == "CONTROL"
        # EXECUTE CONTROLLER SCRIPT
        srv.vm.provision "shell", run: "always", path: "scripts/setup_control.sh"
        # CONFIGURE MEMORY AND CPU FOR CONTROLLER
        srv.vm.provider :virtualbox do |vbox|
          vbox.customize ["modifyvm", :id, "--memory", 1024]
          vbox.customize ["modifyvm", :id, "--cpus", 1]
        end
      end
    end
  end
end
