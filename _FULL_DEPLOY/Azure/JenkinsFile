pipeline {
    agent any
    
    environment {
        // Define environment variables for email settings
        RECIPIENTS = 'lloyd.malfliet@gmail.com' // Email recipients
        SENDER_EMAIL = 'jenkins@lodywood.be' // Sender's email address
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from SCM
                checkout scm
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                def scannerHome = tool 'JenkinsScan' 
                withSonarQubeEnv('SonarQubeInstance') { 
                    sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey='wscicd'"
                }
            }
        }
        
        stage('Quality Gate') {
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
    
    post {
        always {
            emailext(
                subject: "Jenkins Pipeline: ${currentBuild.fullDisplayName} - ${currentBuild.result}",
                body: "Build Number: ${currentBuild.number}\nBuild Result: ${currentBuild.result}\nBuild URL: ${env.BUILD_URL}",
                recipientProviders: [requestor(), developers(), upstreamCommitter()],
                to: env.RECIPIENTS,
                from: env.SENDER_EMAIL
            )
        }
    }
}
