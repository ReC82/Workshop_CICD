<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2198.v41dd8ef6dd56">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <displayName>EhealthApi</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.38.0">
      <projectUrl>https://github.com/ReC82/EHealthAPI.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.38.0">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.vd0f0248b_a_fc4">
    <script>pipeline {
    agent { label &apos;Java&apos; }

    tools {
        maven &quot;Maven396&quot;
    }

    stages {
        stage(&apos;Build&apos;) {
            steps {
                // Get some code from a GitHub repository
                git branch: &apos;main&apos;, url: &apos;https://github.com/ReC82/EHealthAPI.git&apos;

                // Run Maven on a Unix agent.
                sh &quot;mvn -Dmaven.test.failure.ignore=true clean package -DskipTests=true&quot;
            }
        }

        stage(&apos;Static Code Analysis&apos;) {
            steps {
                // Run PMD analysis
                sh &quot;mvn pmd:pmd&quot;
                
                // Archive PMD report
                archiveArtifacts &apos;target/site/pmd.html&apos;
            }
        }

        stage(&apos;Push to Remote Repository&apos;) {
            steps {
                // Navigate to the target directory
                dir(&apos;target&apos;) {
                    sh &quot;git config --global user.email \&quot;lloyd.malfliet@gmail.com\&quot;&quot;
                    sh &quot;git config --global user.name \&quot;ReC82\&quot;&quot;
                    // Initialize Git if not already initialized
                    sh &quot;git init&quot;
                    // Add the built package to Git
                    sh &quot;git add .&quot;
                    // Commit the changes
                    sh &quot;git commit -m &apos;Add built package&apos;&quot;
                    // Push to the remote repository
                    sh &quot;git push https://github.com/ReC82/ArtefactRepo.git main&quot;
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>